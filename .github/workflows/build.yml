name: Build Cutscene Maker

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    env:
      DOTNET_VERSION: '9.0.x'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build self-contained
      run: |
        dotnet publish CutsceneMaker/CutsceneMaker.csproj -c Release -r ${{ matrix.os == 'windows-latest' && 'win-x64' || matrix.os == 'ubuntu-latest' && 'linux-x64' || 'osx-x64' }} --self-contained true -p:PublishSingleFile=true -o ./publish

    - name: Copy Templates folder
      run: |
        mkdir -p ./publish/Templates
        cp -r CutsceneMaker/Templates/* ./publish/Templates/ || echo "No templates found"

    - name: Create ZIP package
      if: matrix.os == 'windows-latest'
      run: Compress-Archive -Path ./publish/* -DestinationPath CutsceneMaker-${{ matrix.os }}.zip
      shell: pwsh

    - name: Create ZIP package (non-Windows)
      if: matrix.os != 'windows-latest'
      run: zip -r CutsceneMaker-${{ matrix.os }}.zip ./publish

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: CutsceneMaker-${{ matrix.os }}
        path: CutsceneMaker-${{ matrix.os }}.zip
